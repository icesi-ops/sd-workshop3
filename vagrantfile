# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.define "nginx" do |nginx|
    nginx.vm.box = "centos/7"
    nginx.vm.hostname = "sistemasdistribuidos"
    nginx.vm.network "private_network", ip: "192.168.56.199"
    nginx.vm.network "forwarded_port", guest:80, host:80
    nginx.vm.provider "virtualbox" do |vb|
     vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "nginx"]
    end
    nginx.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/nginx/main.yaml"
      ansible.groups = {
       "nginx" => ["nginx"]
      }
      
      ansible.extra_vars ={
        "loadbalancer_ip": "192.168.56.200"
      }

    end  
  end

  config.vm.define "lb" do |lb|
    lb.vm.box = "centos/7"
    lb.vm.hostname = "lb"
    lb.vm.network "private_network", ip: "192.168.56.200"
    lb.vm.provider "virtualbox" do |vb|
     vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "lb"]
    end
    lb.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/haproxy/loadbalancer.yaml"
      ansible.extra_vars = {
         "web_servers" => [
          {"name": "web-1","ip":"192.168.56.101"},
          {"name": "web-2","ip":"192.168.56.102"}
         ] 
    	}
    end  #ansible

    lb.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/consul/consul.yaml"
    end #ansible consul
    
    lb.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/consul/firewall_server.yaml"
    end #ansible firewall

    lb.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/consul/run_consul_server.yaml"
    end #ansible run consul

  end
    (1..1).each do |i|
     config.vm.define "web-#{i}" do |web|
      web.vm.box = "centos/7"
      web.vm.hostname = "web-#{i}"
      web.vm.network "private_network", ip: "192.168.56.10#{i}"
      web.vm.provider "virtualbox" do |vb|
       vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "web-#{i}"]
      end #end vb
  
      web.vm.provision "ansible" do |ansible|
        ansible.playbook = "playbooks/consul/consul.yaml"
      end #ansible consul

      web.vm.provision "ansible" do |ansible|
        ansible.playbook = "playbooks/python/flask.yaml"
        ansible.groups = {
         "webservers" => ["web-#{i}"]
        }
      end #end ansible 

      web.vm.provision "ansible" do |ansible|
        ansible.playbook = "playbooks/consul/firewall_web.yaml"
      end #ansible firewall

      web.vm.provision "ansible" do |ansible|
        ansible.playbook = "playbooks/consul/run_consul_agent.yaml"
      end #ansible runconsul

     end # end define
    end #end for

    config.trigger.after :up do |trigger|
      trigger.name = "Run haproxy template"
      trigger.run = { path: "scripts/haproxy_template.sh"}
    end #end trigger

end #end config